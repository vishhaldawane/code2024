



	Database Management System
	  |			|		|
   data 		   CRUD		automate [ save your time ]
   |
various type
of data

character
integral
floating
String
boolean
Date	

		
	
			     who
				|  ELSE
		----------------------
		|				|
		where			when
		|				|
	-------------------------------	
	|			|			|
	why			what			how


			Why database


file.txt <-- plain text
---------
101 Jack 5000 C-908, West Avenue, Mumbai, 400018 <-- row
102 Jane 6000
103 Julie 7000
|     |    |
col1 col2 col3
----------------


address.txt
-------------
col1 col2  col3         col4     col5
|	|		|		|		|
101 C-908, West Avenue, Mumbai, 400018
101 D-108, East Avenue, Pune, 500020



time table


	Monday	Tuesday	Wed	Thu	Fri	Sat	
r1	Maths1	PT
r2	English	English
r3	History	SciI
			
r4	Maths2
r5   Maths2
r6	Geogra		

exam time table

	Day	Date		Time		Venue	Subject
	Tue	12-8-2016 10:30	NMIMS	Maths1	
	Wed	23-8-2016 10:30	NMIMS	Maths1	
	Thu	26-8-2016 10:30	NMIMS	Maths1	
	Fri	12-8-2016 10:30	NMIMS	Maths1	


	File				DBMS
	|				|
FileInputStream		SQL Queries
	|				|		
	Java				Oracle <--


	structured query language

	1. DDL [ auto committed ] <-- actions cannot be undone
			create				
				create structure
			alter
				add/modify columns
			truncate
				empty it [ but structure is safe ]
			drop		
				destroy the table structure along with data

	
	2. DML	[ auto commit is off in oracle ]

			insert
	
			update
			
			delete	

	3. TCL

			commit - permenant changes [ cannot be undone ]
			rollback - can undo the changes

	4. DCL [ admin activity ]
			grant
			revoke

	5. DQL
			



	employee table

	empno	ename	sal
	101		Jack		5000
	102		Jane		6000
	103		Julie	7500
----------------------------------

		SQL> update employee set sal=sal+500 where empno=103
		SQL>....
		SQL>...
		SQL> 
		SQL> ..
		SQL> 



 

















Aca<--bread butter
Profe <-- luxury
finance <-- 

			product + services
			cars    + service 
			
	intangible	soap

			Accounting	Research	Sales	 Operations
			  10 - NY		20 Dallas	30 Chicago 40 Boston
				|			|		|
			-----------  -------+	-------------
			|		   |	    		|
			KING		  JONE	   BLAKE
			|7839	  |7566		|7698	
		President		 Manager-		---------------------------
		5000			 2975		|	  |	   |	     |	 |
		|			   |			MARTIN ALLEN TURNER WARD JAMES
		Clark        ------------	<-------salesan-------->clerk	
		|manager		|		|	7654   7499  7844   7521 7900
		|			Ford		Scott
		Miller		|7902	|7788
		 clerk		Smith	Adam
					|clerk	|clerk





nested queries

		select ... (select. ... (select )))

Joins
-------

		combine columns of more than 2 tables

		select * from table1, table2

		cartesion product


1 natural join
	- cartesion product of the joined tables

2 equi join
	- give a meaningfull condition to this cartesion product
		to filter the desired rows


3 non-equi join

	records matching a particular range of data



4 outer join
		- SHOWS THE UNMATCHED RECORDS as well
	
	right outer join
	left outer join
	full outer join

5 self join
		- table joining itself

RICH DAD POOR DAD
CASH FLOW QUADRANDT
	
ACA
PROF
FINANCE

	JOB
	
SARASWATI		LAKSHMI

	E	|	B	3 <-- LEAD THE FIELD - JIM ROHN
1		|	TEAM
----------------------
	S	|	I	4
2		|

	95%		5%
	5%		95%

	800 CRORE











		PARMATMA			
		ATMA				- ATMA  SHAKTI
		INTELLECT			- GYAN  SHAKTI
		MIND - 7 LEVELS	- ICHHA SHAKTI - DESIRE
		BODY


	I KNOW		| NOW I KNOW
	WHAT I KNOW	| WHAT I DONT KNOW
		------------------------
	I DONT KNOW	| I DONT KNOW
	WHAT I KNOW	| WHAT DONT KNOW








DDL

		data types
			|
	-------------------------------------------------------------
	|		|			|			|			|
	integral	floating		character		strings		date
	|		|				|		|			|
	number	number(10,2)		char		varchar2(20)  date


			Create table with constraints or without constraints


	Constraints

	1. Integrity constraint
			PRIMARY KEY = unique + not null
			ONLY ONE PER TABLE

	2. Unique constraint
			UNIQUE = non-duplicate + null values

				UNIQUE + NOT NULL = ALTERNATIVE OPTION TO CREATE ADDITIONAL
								PRIMARY KEY
	3. not null 
			column must have value
			cannot be empty

	4. check constraint

			check a column against a matching value

			e.g.
				check sal > 5000
				check sal > comm
				check job in ('MANAGER','CLERK','SALESMAN','ANALYST')

	5. referential integrity [ foreign key ]
			- it refers the validation against a primary key/unique
			- it can have duplicates with null

DEPT
DEPTNO	DNAME	LOC
10		ACC
20		SALES
30		RESEARCH
40		OPERATIONS

		EMPLOYEE
		PK		NN		CHECK	UNIQUE      CHECK		FOREGIN KEY
		|		|		|		|		   |			   |
		EMPNO	ENAME	JOB		EMAIL	   SAL		DEPTNO
		-----	----		-----	-----	   -----
		101		JULIE	MANAGER	julie@gmail  4000<-invalid  10	
		102		JANE		CLERK     jane@gmail   5400		   20
		110		SMITH	SALESMAN  julie@gmail<-invalid	   90<-invalid
		104		PETER	SRCLERK<-INVALID				   20
		103		- <-INVALID	
		103 <-- INVALID
		- <-- INVALID
		110		ALLEN	MANAGER	al@gmail.com 5600		   10
		112		MARTIN	SALESMAN  mar@gmail	   6000		   -<--valid	




PRIMARY KEY
unique constraint (SQL_QFIJNQPMZNRPUPQZIYADFKTKV.SYS_C00171070630) violated ORA-06512:

NOT NULL
cannot insert NULL into ("SQL_QFIJNQPMZNRPUPQZIYADFKTKV"."EMP2"."ENAME") ORA-06512: at "SYS.DBMS_SQL"

CHECK JOB 
ORA-02290: check constraint (SQL_QFIJNQPMZNRPUPQZIYADFKTKV.SYS_C00171070628) violated ORA-06512: at "SYS.DBMS_SQL", line 1721

ORA-00001: unique constraint (SQL_QFIJNQPMZNRPUPQZIYADFKTKV.SYS_C00171070631) violated ORA-06512: at "SYS.DBMS_SQL", line 1721

CHECK SALARY
ORA-02290: check constraint (SQL_QFIJNQPMZNRPUPQZIYADFKTKV.SYS_C00171070629) violated ORA-06512: at "SYS.DBMS_SQL", line 1721

ORA-02291: integrity constraint (SQL_QFIJNQPMZNRPUPQZIYADFKTKV.SYS_C00171070632) violated - parent key not found ORA-06512: at "SYS.DBMS_SQL", line 1721


-- below constraints are issued alongwith the column definitions
- such constraints are known as column level constraints
CREATE TABLE EMP2 
(
    EMPNO NUMBER PRIMARY KEY, 
    ENAME VARCHAR2(20) NOT NULL, 
    JOB   VARCHAR2(20) CHECK (JOB IN('ANALYST','MANAGER','CLERK','SALESMAN')),
    EMAIL VARCHAR2(20) UNIQUE,
    SALARY NUMBER CHECK (SALARY >= 5000 AND SALARY > COMM),
    COMM NUMBER CHECK ( COMM < SALARY )
    DNO    NUMBER REFERENCES DEPT(DEPTNO)
)

TABLE LEVEL CONSTRAINTS ARE ISSUED AFTER THE TABLE STRCTURE CREATION

CREATE TABLE EMP2 
(
    EMPNO NUMBER , 
    ENAME VARCHAR2(20) NOT NULL, 
    JOB   VARCHAR2(20), 
    EMAIL VARCHAR2(20),
    SALARY NUMBER ,
    DNO    NUMBER, 

    PRIMARY KEY (EMPNO),
    CHECK (JOB IN('MANAGER','ANALYST')),
    UNIQUE (EMAIL),
    CHECK (SALARY >= 6000),
    FOREIGN KEY ( DNO) REFERENCES DEPT(DEPTNO)
)

CREATE TABLE EMP52
(
    EMPNO NUMBER , 
    ENAME VARCHAR2(20) NOT NULL, 
    JOB   VARCHAR2(20), 
    EMAIL VARCHAR2(20),
    SALARY NUMBER ,
    DNO    NUMBER, 
);


alter table emp5 add PRIMARY KEY (EMPNO);
alter table emp52 add primary key (empno)
alter table emp52 modify email unique;
alter table emp52 modify salary check (salary > 7000)
alter table emp52 add foreign key (dno) references dept(deptno)














    select * from emp2
INSERT INTO EMP2 VALUES (101,'JACK','MANAGER','jack@gmail.com',5400,10)
INSERT INTO EMP2 VALUES (102,'JANE','SALESMAN','jane@gmail.com',5800,20)
INSERT INTO EMP2 VALUES (103,'SMITH','MANAGER','smith@gmail.com',5900,10)
INSERT INTO EMP2 VALUES (104,'PETER','MANAGER','peter@gmail.com',5900,10)
INSERT INTO EMP2 VALUES (105,'ALLEN','CLERK','allen@gmail.com',8900,10)
INSERT INTO EMP2 VALUES (106,'MARTIN','CLERK','martin@gmail.com',7900,30)

select * from emp2




set operators
----------
union
union all
minus
intersect

A) below query would eliminate the duplicate rows between both the queires
	and present the distinct records too

select rownum, empno,ename, job, deptno from emp where rownum<=7
    union 
select rownum, empno,ename, job, deptno from emp where rownum<=5


B) complete set of A and B would be combined regardless of the duplicate rows

select rownum, empno,ename, job, deptno from emp where rownum<=7
    union all 
select rownum, empno,ename, job, deptno from emp where rownum<=5


C) A-B = the distinct records of the subtraction, rec 6 and 7 would come

select rownum, empno,ename, job, deptno from emp where rownum<=7
   minus 
select rownum, empno,ename, job, deptno from emp where rownum<=5

D) only common records of A+B are shown, distincts are eliminated
select rownum, empno,ename, job, deptno from emp where rownum<=7
    intersect 
select rownum, empno,ename, job, deptno from emp where rownum<=5



What is a model class = a representative of your table
Bean = component = pojo = plain old java object

	table dept
	---------------
	deptno	dname	loc
	------------------------
	10		ACC		 NY
	20		RESEARCH	 NJ
	30		SALES	 NP
	40		OPERATIONS NM

	class Department 
	{
		int departmentNumber;
		String departmentName;
		String departmentLocation;
		
		public Department(){ //mandatory | implicit|explicit
		}

		set/get
	}

	Department deptObj = new Department();
	deptObj.setDepartmentNumber(result.getInt(1));
	deptObj.setDepartmentName(result.getString(2));
	deptObj.setDepartmentLocation(result.getString(3));

----------------------
InsertTestWithModel.java

		load the driver
		connect
		PreparedStatement pst;--- insert query..7 ???

		Employee emp = new Employee();
		
		Accept data from the user;
		emp.setEmployeeNumber( scan.nextInt() );
		..
		..
		..
		pst.setInt(emp.getEmployeeNumber());
		..
		..
		pst.executeUpdate();



CREATE TABLE DEPT (
 DEPTNO              NUMBER(2) NOT NULL,
 DNAME               VARCHAR(14),
 LOC                 VARCHAR(13),
 CONSTRAINT DEPT_PRIMARY_KEY PRIMARY KEY (DEPTNO));

INSERT INTO DEPT VALUES (10,'ACCOUNTING','NEW YORK');
INSERT INTO DEPT VALUES (20,'RESEARCH','DALLAS');
INSERT INTO DEPT VALUES (30,'SALES','CHICAGO');
INSERT INTO DEPT VALUES (40,'OPERATIONS','BOSTON');		

1. make a package as dao or whatever suitable name
2. make a pojo/bean/component/model
	it is similar to the table's structure
	e.g. Department

3. make a poji - DepartmentDAO
4.	declare 5 methods in this interface
	for CRUD

5. make the implementation of the above poji




maven project
---------------
	maven = project management tool


	- declare the libraries

	then it automates the downloading of
	required libraries


 				FirstMavenProject
				|
			-------------
			|		|
			src		pom.xml [project object model]
			|
	------------------------
		|			|
		main			test
		|			|	
	-------------		TEST CASES HERE
	|		|			
	java	 resources
	|
JAVA CODE
HERE
















